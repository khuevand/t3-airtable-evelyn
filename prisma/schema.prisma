// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
    id String @id
    email String @unique
    name String?
    createdAt DateTime @default(now())
    base Base[]

    @@index([id])
}

model Base {
    id String @id @default(cuid())
    name String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    table Table[]
    tableSequence Int @default(1)
    user User @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId String

    @@index([id])
    @@index([userId])
}

model Table {
  id String @id @default(cuid())
  name String
  column Column[]
  row Row[]
  columnSequence Int @default(5)
  createdAt DateTime @default(now())
  base Base @relation(fields: [baseId], references: [id], onDelete: Cascade)
  baseId String

  @@index([id])
  @@index([baseId])
}

model Column {
  id String @id @default(cuid())
  name String
  stringVal Boolean @default(true)
  intVal Boolean @default(false)
  order Int
  createdAt DateTime @default(now())
  table Table @relation(fields: [tableId], references: [id], onDelete: Cascade)
  tableId String
  visible Boolean @default(true)
  cell Cell[]

  @@index([id])
  @@index([tableId])
}

model Row {
  id String @id @default(cuid())
  createdAt DateTime @default(now())
  table Table @relation(fields: [tableId], references: [id], onDelete: Cascade)
  tableId String
  cell Cell[]

  @@index([id])
  @@index([tableId])
}

model Cell {
  id String @id @default(cuid())
  stringVal String?
  intVal Int?
  column Column @relation(fields: [columnId], references: [id], onDelete: Cascade)
  row Row @relation(fields: [rowId], references: [id], onDelete: Cascade)
  columnId String
  rowId String

  @@index([id])
  @@index([columnId, rowId])
}